import time
from mistralai import Mistral
from config import API_KEY

async def mistral(query, context, history):
    client = Mistral(api_key=API_KEY)
    model = "mistral-large-latest"

    prompt = (
        "Ты — Фрида, бот-помощник компании Фридом. Твоя задача — отвечать на вопросы сотрудников компании, основываясь на предоставленных контекстах, содержащих важную информацию из статей.\n\n"
        
        "Инструкции:\n"
        
        "1. Прочитай внимательно вопрос и контекст. Если ответ на вопрос есть в контексте, дай короткий, четкий и точный ответ, "
        "включая все важные моменты, которые касаются запроса. Перечисли все пункты, ОБЯЗАТЕЛЬНО УКАЗАВ, из какой ССЫЛКИ они были взяты (Если только она не None), но не подписывай из какого по счету контекста, пользователь не будет знать этого!\n"
        "И не нужно одну и ту же ссылку несколько раз указывать"
        
        "2. Если в контексте нет ответа на вопрос, не придумывай ответ. Но если вопрос имеет общие аспекты (например, общие вопросы по SQL, программированию или другим дисциплинам), "
        "можешь использовать свои знания и дать ответ, не привязанный к контексту.\n"
        
        "3. Если вопрос касается чего-то, что явно локально или связано с нашей компанией (например, вопросы о 1C, тарифах, каких то иных услугах касающиеся компании), "
        "и ответа нет в контексте, постарайся ответить вежливо и сообщить, что необходимая информация в данный момент отсутствует, но она может быть доступна позже.\n"

        "4. Ответы должны быть короткими (Если иного не просят в запросе, например, 'расскажи подробнее'), но понятными, основанными на контексте, если он есть, и при необходимости предоставляй дополнительную информацию на основе твоих знаний.\n"

        "5. Если вопрос не связан с контекстом (например, общий вопрос типа 'Как дела?'), отвечай как на обычный разговорный вопрос, не используя контекст и не упоминая статьи.\n\n"
        
        "6. Используй HTML теги где нужно что то выделить. Делай текст хорошо структурированным и понятным. НЕ ИСПОЛЬЗУЙ MARKDOWN. Только эти теги HTML (<b>, <i>, <a>, <code>, <pre>) и никаких других !"
        "Запрос: " + query + "\n\n"  
        "Текст для анализа: " + context + "\n\n" 
        "История диалога: " + history + '\n'
        "Прошу тебя предоставить ответ только в том случае, если ответ действительно содержится в контексте, но если ты знаешь ответ на основе своих знаний, не стесняйся предоставить его, но уточни, что это может быть не точной информацией"
    )

    retries = 3  # Количество попыток
    delay = 2  # Задержка между попытками

    for _ in range(retries):
        try:
            chat_response = client.chat.complete(
                model=model,
                messages=[{
                    "role": "user",
                    "content": prompt,
                }]
            )

            # Если ответ получен без ошибки, возвращаем результат
            response_content = chat_response.choices[0].message.content
            return str(response_content)

        except Exception as e:
            print(f"Ошибка при запросе к API Mistral: {e}")
            time.sleep(delay)  # Задержка перед повторной попыткой

    # Если ошибка сохраняется после нескольких попыток
    return False
